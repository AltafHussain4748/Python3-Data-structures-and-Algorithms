"""The problem with original chaining is that of same index is generated by hash then we will have issue"""


class HashTableChain:
    def __init__(self):
        self.MAX = 10
        self.arr = [[] for i in range(self.MAX)]

    def get_hash(self, key):
        hash_num = 0
        for char in key:
            hash_num += ord(char)
        return hash_num % self.MAX

    def __getitem__(self, index):
        h = self.get_hash(index)
        for kv in self.arr[h]:
            if kv[0] == index:
                return kv[1]
        return False

    def __setitem__(self, key, val):
        h = self.get_hash(key)
        self.arr[h].append((key, val))

    def __delitem__(self, key):
        h = self.get_hash(key)
        self.arr[h] = None


table = HashTableChain()
table["march 6"] = 310
table["march 9"] = 3198
table["march 17"] = 420
print(table["march 6"])
